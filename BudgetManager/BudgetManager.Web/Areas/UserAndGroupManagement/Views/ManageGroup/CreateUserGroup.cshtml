@model GroupViewModel
@{
    ViewBag.Title = "Create Group";
}

@section BreadCrumb{
    <div class="page-header position-relative">
        <h1>User Groups
            		<small>
                <i class="icon-double-angle-right"></i>
                Create a Group
            </small>
        </h1>
    </div>
}
<div class="table-header">
    <h2>Create a Group</h2>
</div>
<div class="row-fluid">
    <div class="widget-box">
        <div class="widget-header widget-header-small">
            <h5 class="lighter">Create a budget group</h5>
        </div>

        <div class="widget-body">
            <div class="widget-main">
                <div class="controls">
                    @using (Html.BeginForm("CreateUserGroup", "ManageGroup", new { area = "UserAndGroupManagement" }, FormMethod.Post, htmlAttributes: new { id = "UserGroupForm", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()                   
                        @Html.Partial("_validationSummary")
                        Html.EnableClientValidation(true);
                        Html.EnableUnobtrusiveJavaScript(true); 
                        
                        if (Model.HasEditAccess)
                        {
                        <div class="row-fluid">
                            <div class="span2">
                                <label for="form-field-8">Group Name</label>
                            </div>
                            <div class="span4">
                                <div class="control-group">
                                    <div class="row-fluid input-append">
                                        @Html.TextBoxFor(model => model.GroupName, htmlAttributes: new { placeholder = "Group Name", @class = "input-large" }))                                                   
                                    </div>
                                </div>
                            </div>
                            <div class="span4">@Html.ValidationMessageFor(m => m.GroupName)</div>
                        </div>
                        <div class="row-fluid">
                            <div class="span2">
                                <label for="form-field-8">User List</label>
                            </div>
                            <div class="span4">
                                <div class="control-group">
                                    <div class="row-fluid input-append">
                                        @Html.ListBoxFor(m => m.SelectedUsers, Model.UserList, string.Empty)
                                    </div>
                                </div>
                            </div>
                            <div class="span4">@Html.ValidationMessageFor(m => m.SelectedUsers)</div>
                        </div>
                        <div class="row-fluid">
                            <button class="btn btn-purple btn-small pull-right" id="CreateUserGroup" name="CreateUserGroup" type="submit">
                                Create														
                            <i class="icon-save icon-on-right bigger-110"></i>
                            </button>
                        </div>
                        }
                        else
                        {
                        <div>Not allowed to access/view the contents of the screen.</div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section BootstrapScripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $("#userSearch").keyup(function () {
            var actionUrl = "@Url.Action("GetUsers", "InviteFriends")"; 
            var userName = $(this).val();
            if (userName !== "") {
                actionUrl = actionUrl + "?userName=" + userName;
                $("#userSearch").attr("disabled", "disabled");
                $.get(actionUrl, function (data) {
                    $("#userSearchResult").html(data);
                    $("#userSearch").removeAttr("disabled", "disabled");
                });
            }
        });

        $(document).on("click", ".invite", function () {
            var userId = $(this).parent().parent().data("user");
            var actionUrl = "@Url.Action("InviteAFriend", "InviteFriends")";
            actionUrl = actionUrl + "?userId=" + userId;
            $(".invite").hide();
            $.post(actionUrl, function (data) {
                $(".invite").show();
            });
        });
    </script>
}