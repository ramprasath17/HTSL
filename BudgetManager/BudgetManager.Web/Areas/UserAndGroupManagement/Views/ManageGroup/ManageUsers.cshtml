@using BudgetManager.Web.Areas.UserAndGroupManagement.Models
@model ManageUsersViewModel
@{
    ViewBag.Title = "ManageUsers";
}

@section BreadCrumb{
    <div class="page-header position-relative">
        <h1>Manage Users
							<small>
                                <i class="icon-double-angle-right"></i>
                                Add / Edit Users
                            </small>
        </h1>
    </div>
}

@section ActionStatusNotification{
    <div class="alert alert-info update-info hide">
        <button data-dismiss="alert" class="close" type="button">
            <i class="icon-remove"></i>
        </button>
        <strong>Status!</strong>
        @BudgetManager.Entities.Messages.UpdateSuccessInformation
        <br>
    </div>
}

<div class="row-fluid">
    <h3 class="header smaller lighter blue">Manage Users</h3>
    <div class="table-header">
        User that are currently available in the application are listed below.
    </div>

    <table id="ManageUsersTable" class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>User ID</th>
                <th>Display Name</th>
                <th>First Name</th>
                <th>Middle Name</th>                
                <th>Last Name</th>
                <th class="hide">Company Id</th>
                <th>Company Name</th>
                @*<th>Is Active</th>*@
                <th class="sorting_disabled"></th>
            </tr>
        </thead>

        <tbody>
            @foreach (ApplicationUserInformation appuser in Model.ApplicationUserInformation)
            {
                <tr data-record-id="@appuser.UserId" data-component="U">
                    <td data-column="UserId">@appuser.UserId</td>
                    <td data-editable="true" data-control-type="text" data-column="DisplayName">@appuser.DisplayName</td>
                    <td data-editable="true" data-control-type="text" data-column="FirstName">@appuser.FirstName</td>
                    <td data-editable="true" data-control-type="text" data-column="MiddleName">@appuser.MiddleName</td>
                    <td data-editable="true" data-control-type="text" data-column="LastName">@appuser.LastName</td>
                    <td data-editable="false" data-control-type="text" data-column="CompanyId" class="hide" data-conditional="true" data-type="numeric">@appuser.CompanyId</td>
                    <td data-editable="true" data-control-type="text" data-column="CompanyName">@appuser.CompanyName</td>
                    @*<td data-editable="true" data-control-type="checkbox" data-column="IsActive" data-type="numeric">
                        @Html.DisplayFor(user => appuser.IsActive, "SlideableCheckBox")
                    </td>*@
                    <td class="td-actions">
                        @Html.Partial("_ActionControlBlock")
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@Html.Partial("_EditModalPopUp", Model.TableId+"~Users")

@section BootstrapScripts{

    @Scripts.Render("~/LogInBundle/Scripts/js")
    <script type="text/javascript">
        $("a[title=Delete]").deleteSelectedRecord({
            actionUrl: "@Url.Action("DeleteSelectedItem", "ComponentAction", new { area = "" })"
        });
        $(function () {
            applyGridProperties("#ManageUsersTable");
        });

        $(function () {
            $('table th input:checkbox').on('click', function () {
                var that = this;
                $(this).closest('table').find('tr > td:first-child input:checkbox')
                .each(function () {
                    this.checked = that.checked;
                    $(this).closest('tr').toggleClass('selected');
                });

            });

            $('[data-rel="tooltip"]').tooltip({ placement: tooltip_placement });
            function tooltip_placement(context, source) {
                var $source = $(source);
                var $parent = $source.closest('table')
                var off1 = $parent.offset();
                var w1 = $parent.width();

                var off2 = $source.offset();
                var w2 = $source.width();

                if (parseInt(off2.left) < parseInt(off1.left) + parseInt(w1 / 2)) return 'right';
                return 'left';
            }
        });

        $("button[data-dismiss=modal]").click(function () {
            $("#@Model.TableId-edit-table").addClass("hide");
        });

        $("a[title=Edit]").updateSelectedRecord({
            componentType: 'U',
            actionUrl: "@Url.Action("UpdateSelectedComponentRecord", "ComponentAction", new { area = "" })",
            title:"Edit Selected User",
            tableId: "@Model.TableId",
            onSuccess: function () {
                $(".update-info").show();
                $(".update-info").fadeOut(4000);
            }
        });
    </script>

}