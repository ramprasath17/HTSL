@model TransactionViewModel
@{
    ViewBag.Title = "Create transaction";
}

@Html.Partial("_validationSummary")

<div class="row-fluid">
    <div class="widget-box">
        <div class="widget-header widget-hea1der-small header-color-dark">
            <h5 class="lighter">Create transaction</h5>
            <div class="widget-toolbar">
            </div>
        </div>
        @if (Model.HasEditAccess)
        {
            Html.EnableClientValidation(true);
            Html.EnableUnobtrusiveJavaScript(true);
            Html.AntiForgeryToken();
            <div class="widget-body">
                <div class="widget-main">
                    <div class="controls">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <div class="row-fluid">
                                <div class="span2">
                                    @Html.LabelFor(model => model.Description)
                                </div>
                                <div class="span4">
                                    <div class="control-group">
                                        <div class="row-fluid">
                                            @Html.TextBoxFor(model => model.Description, htmlAttributes: new { placeholder = "Description", @class = "input-large" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span4">@Html.ValidationMessageFor(m => m.SelectedExpense)</div>
                            </div> 
                            <div class="row-fluid">
                                <div class="span2">
                                    @Html.LabelFor(model => model.SelectedExpense)
                                </div>
                                <div class="span4">
                                    <div class="control-group">
                                        <div class="row-fluid">
                                            @Html.DropDownListFor(m => m.SelectedExpense, Model.Expenses, string.Empty, new { @class = "expenses chzn-select", data_placeholder = "Select an expenses" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span4">@Html.ValidationMessageFor(m => m.SelectedExpense)</div>
                            </div>                                
                            <div class="row-fluid">
                                <div class="span2">
                                    @Html.LabelFor(model => model.AmountReturnedBy)
                                </div>
                                <div class="span4">
                                    <div class="control-group">
                                        @Html.DropDownListFor(m => m.AmountReturnedBy, Model.UsersInExpense, new { @class = "amountReturnedBy chzn-select", data_placeholder = "Select a user returned" })
                                    </div>
                                </div>
                                <div class="span4">@Html.ValidationMessageFor(m => m.AmountReturnedBy)</div>
                            </div>                        
                            <div class="row-fluid">
                                <div class="span2">@Html.LabelFor(model => model.AmountReceivedBy)</div>
                                <div class="span4">
                                    <div class="control-group">
                                        <div class="row-fluid">
                                            @Html.DropDownListFor(m => m.AmountReceivedBy, Model.UsersInExpense, new { @class = "amountReceivedBy chzn-select", data_placeholder = "Select a user received" })
                                        </div>
                                    </div>
                                </div>
                                <div class="span4">@Html.ValidationMessageFor(m => m.AmountReceivedBy)</div>
                            </div>                        
                            <div class="row-fluid">
                                <div class="span2">
                                    @Html.LabelFor(model => model.AmountReturnedOn)
                                </div>
                                <div class="span4">
                                    <div class="control-group">
                                        <div class="row-fluid">
                                            <div class="row-fluid input-append calendar">
                                                @Html.TextBoxFor(model => model.AmountReturnedOn, "{0:dd/MM/yyyy}", htmlAttributes: new { data_date_format = "dd-mm-yyyy", placeholder = "Returned on", @class = "input-large" })
                                                <span class="add-on">
                                                    <i class="icon-calendar"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="span4">@Html.ValidationMessageFor(m => m.AmountReturnedOn)</div>
                            </div>
                            <div class="row-fluid">
                                <div class="span2">
                                    @Html.LabelFor(model => model.AmountReturned)
                                </div>
                                <div class="span4">
                                    <div class="control-group">
                                        <div class="row-fluid input-icon">
                                            @Html.TextBoxFor(model => model.AmountReturned, htmlAttributes: new { placeholder = "Spent Amount", @class = "input-large" })
                                            <i class="icon-inr"></i>
                                        </div>
                                    </div>
                                </div>
                                <div class="span4">@Html.ValidationMessageFor(m => m.AmountReturned)</div>
                            </div>
                            <div class="row-fluid">
                                <button class="btn btn-purple btn-small pull-right" id="createtransaction" name="createtransaction" type="submit">
                                    <i class="icon-save icon-on-right bigger-110"></i>
                                    &nbsp;  Create 
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
        else
        {
            <div>Not allowed to access/view the contents of the screen.</div>
        }
    </div>
</div>
@Html.Hidden("userLookupUrl", @Url.Action("GetLookupData", "Transaction"), htmlAttributes: new { id = "userLookupUrl" })
@section BootstrapScripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script type="text/javascript">
        $(".chzn-select").chosen();
        $(function () {
            $('.calendar').datetimepicker({
                language: 'en',
                format: 'dd/MM/yyyy'
            });
        });
    </script>
    @Scripts.Render("~/Scripts/Expenses/transaction.js")
}